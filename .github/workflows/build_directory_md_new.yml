# The objective of this GitHub Action is to update the DIRECTORY.md file (if needed)
# when doing a git push
name: directory_writer
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: 3.x
      - shell: python
        run: import sys ; print("Python {}.{}.{}".format(*sys.version_info))
      - name: Upgrade to Python 3.8
        run: sudo update-alternatives --install /usr/bin/python python ${pythonLocation}/bin/python3.8 10
      - shell: python
        run: import sys ; print("Python {}.{}.{}".format(*sys.version_info))
      - shell: python
        import os
        from typing import Iterator

        URL_BASE = "https://github.com/TheAlgorithms/C-Plus-Plus/blob/master"


        def good_filepaths(top_dir: str = ".") -> Iterator[str]:
            cpp_exts = tuple(".c .c++ .cc .cpp .cu .cuh .cxx .h .h++ .hh .hpp .hxx".split())
            for dirpath, dirnames, filenames in os.walk(top_dir):
                dirnames[:] = [d for d in dirnames if d[0] not in "._"]
                for filename in filenames:
                    if os.path.splitext(filename)[1].lower() in cpp_exts:
                        yield os.path.join(dirpath, filename).lstrip("./")


        def md_prefix(i):
            return f"{i * '  '}*" if i else "\n##"


        def print_path(old_path: str, new_path: str) -> str:
            old_parts = old_path.split(os.sep)
            for i, new_part in enumerate(new_path.split(os.sep)):
                if i + 1 > len(old_parts) or old_parts[i] != new_part:
                    if new_part:
                        print(f"{md_prefix(i)} {new_part.replace('_', ' ').title()}")
            return new_path


        def print_directory_md(top_dir: str = ".") -> None:
            old_path = ""
            for filepath in sorted(good_filepaths()):
                filepath, filename = os.path.split(filepath)
                if filepath != old_path:
                    old_path = print_path(old_path, filepath)
                indent = (filepath.count(os.sep) + 1) if filepath else 0
                url = "/".join((URL_BASE, filepath, filename)).replace(" ", "%20")
                filename = os.path.splitext(filename.replace("_", " ").title())[0]
                print(f"{md_prefix(indent)} [{filename}]({url})")


        # if __name__ == "__main__":
        print_directory_md(".")

      - name: Update DIRECTORY.md
        run: |
          #Â .github/scripts/build_directory_md.py 2>&1 | tee DIRECTORY.md
          git config --global user.name github-actions
          git config --global user.email '${GITHUB_ACTOR}@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          git add DIRECTORY.md
          git commit -am "updating DIRECTORY.md" ||  true
          git push --force origin HEAD:$GITHUB_REF || true
